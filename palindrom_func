#! /bin/sh

# checking letter lowercase and return uppercase
switch_to_uppercase () {
    char="$1"

    case $char in
        a) char=A;;  h) char=H;;  o) char=O;;  u) char=U;;  
        b) char=B;;  i) char=I;;  p) char=P;;  v) char=V;;  
        c) char=C;;  j) char=J;;  q) char=Q;;  w) char=W;;  
        d) char=D;;  k) char=K;;  r) char=R;;  x) char=X;;  
        e) char=E;;  l) char=L;;  s) char=S;;  y) char=Y;;  
        f) char=F;;  m) char=M;;  t) char=T;;  z) char=Z;;  
        g) char=G;;  n) char=N;;  
    esac

    printf "${char}"
}
# checking two symbols are equal case insensitive 
# 
# returns 0 if equals and 255 if not
check_sym_equals () {
    SYM_1="$1"
    SYM_2="$2"

    # switching to uppercase first sym
    case "$SYM_1" in 
        [[:alpha:]]) 
            SYM_1=$(switch_to_uppercase "$SYM_1")
        ;;
    esac
    # switching to uppercase second sym
    case "$SYM_2" in 
        [[:alpha:]]) 
            SYM_2=$(switch_to_uppercase "$SYM_2")
        ;;
    esac

    if [ "X${SYM_1}" = "X${SYM_2}" ]; then 
        return 0
    fi

    return 255
}
# check argument $1 is not special symbol
check_spec_symbol () {
    SYM="$1"

    case "$SYM" in 
    [[:alnum:]]) 
        return 0
        ;;
    *)
        return 255
        ;;
    esac
}

# checking argument $1 is palindrom
palindrom () {
    WORD="$1"

    echo "==============="
    echo "starting with word $WORD"
    WORD_COPY="$1"

    LEN=${#WORD}

    while [ "$LEN" -gt 1 ]; do
        echo "starting main loop"
        # implement ignoring symbols
        START_SYM=${WORD:0:1}
        check_spec_symbol "$START_SYM"

        # skipping special symbols on start
        while [ $? -eq 255 ]; do
            SIZE=$(( LEN - 1 ))
            WORD=${WORD:1:LEN}
            
            START_SYM=${WORD:0:1}
            check_spec_symbol "$START_SYM"
            LEN=${#WORD}
        done
        echo $START_SYM

        echo "after start: $WORD"

        END_POS=$(( LEN  - 1 ))
        END_SYM=${WORD:END_POS:1}
        check_spec_symbol "$END_SYM"

        # skipping special symbols on the end
        while [ $? -eq 255 ]; do
            SIZE=$(( LEN - 1 ))
            WORD=${WORD:0:LEN}

            END_POS=$(( LEN  - 1 ))
            END_SYM=${WORD:END_POS:1}
            check_spec_symbol "$START_SYM"
            LEN=${#WORD}
        done
        echo $END_SYM

        if [ "$END_SYM" != "$START_SYM" ]; then
            return 255
        fi
        
        SIZE=$(( LEN - 2 ))


        # cut word
        WORD=${WORD:1:SIZE}
        LEN=${#WORD}
    done

    return 0
}

# WORD_CHECK="$1"
# palindrom "$WORD_CHECK"

# if [ "$?" -eq 0 ]; then
#     exit 255
# else
#     exit 0
# fi


